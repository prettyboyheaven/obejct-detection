{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["image","App","state","canvasHeight","canvasWidth","isDrawing","startDrawingPositionX","startDrawingPositionY","groups","ratio","scale","naturalScale","cords","width","height","x","y","handleGetData","_this$state","_this","shiftX","shiftY","groupsCoordinates","CoordsWithResizeToOriginalImage","Object","classCallCheck","this","forEach","group","_group$getClientRect","getClientRect","push","Math","round","console","log","JSON","stringify","setState","calculateAspectRatioFit","srcWidth","srcHeight","maxWidth","maxHeight","min","calculateScale","imgWidth","imgHeight","_this$state2","_this2","_this$state3","stage","Konva","Stage","container","layer","Layer","imageObj","Image","onload","e","imageNaturalHeight","target","naturalHeight","imageNaturalWidth","naturalWidth","imageSize","left","top","_this2$state","imageToDetect","add","draw","src","on","hasName","find","destroy","evt","layerX","layerY","Group","draggable","name","rect","getChildren","node","getClassName","rectWidth","attrs","rectHeight","groupPositionX","groupPositionY","sumY","Rect","fill","stroke","overflow","cursor","strokeWidth","concat","toConsumableArray","item","currentGroup","filter","groupItem","_id","parent","transformer","Transformer","enabledAnchors","remove","cancelBubble","posNow","posStart","posIn","posRect","r1","r2","d","r1x","r1y","r2x","r2y","abs","x1","y1","x2","y2","reverse","visible","updateDrag","crossImageObj","crossImage","react_default","a","createElement","key","id","style","border","margin","onClick","className","position","alt","map","index","background","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2RAIMA,SAAQ,oEAsWCC,6MAnWbC,MAAQ,CACNC,aAAc,IACdC,YAAa,IACbC,WAAW,EACXC,sBAAuB,KACvBC,sBAAuB,KACvBC,OAAQ,GACRC,MAAO,KACPC,MAAO,KACPC,aAAc,KACdC,MAAO,CAAC,CAACC,MAAO,EAAGC,OAAQ,EAAGC,EAAG,EAAGC,EAAG,OAkRzCC,cAAgB,WAAM,IAAAC,EACcC,EAAKjB,MAA/BO,EADYS,EACZT,MAAOW,EADKF,EACLE,OAAQC,EADHH,EACGG,OACnBC,EAAoB,GAElBC,EACJ,SAAAA,EAAYR,EAAGC,EAAGH,EAAOC,GAASU,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAChCG,KAAKX,EAAIA,EACTW,KAAKV,EAAIA,EACTU,KAAKb,MAAQA,EACba,KAAKZ,OAASA,GAIlBK,EAAKjB,MAAMM,OAAOmB,QAAQ,SAAAC,GAAS,IAAAC,EACDD,EAAME,gBAA9Bf,EADyBc,EACzBd,EAAGC,EADsBa,EACtBb,EAAGH,EADmBgB,EACnBhB,MAAOC,EADYe,EACZf,OAErBQ,EAAkBS,KAAM,IAAIR,EACxBS,KAAKC,OAAOlB,EAAIK,GAAUX,GAC1BuB,KAAKC,OAAOjB,EAAIK,GAAUZ,GAC1BuB,KAAKC,MAAMpB,EAAQJ,GACnBuB,KAAKC,MAAMnB,EAASL,OAG1ByB,QAAQC,IAAIC,KAAKC,UAAUf,IAC3BH,EAAKmB,SAAS,CACZ1B,MAAOU,OAIXiB,wBAA0B,SAACC,EAAUC,EAAWC,EAAUC,GACxDxB,EAAKmB,SAAS,CACZ7B,MAAOuB,KAAKY,IAAIF,EAAWF,EAAUG,EAAYF,KAFmB,IAI9DhC,EAAUU,EAAKjB,MAAfO,MAER,MAAO,CACLI,MAAO2B,EAAW/B,EAClBK,OAAQ2B,EAAYhC,MAIxBoC,eAAiB,SAACC,EAAUC,GAAc,IAAAC,EACF7B,EAAKjB,MAAnCE,EADgC4C,EAChC5C,YAAaD,EADmB6C,EACnB7C,aAErBgB,EAAKmB,SAAS,CACZ5B,MAAOsB,KAAKY,IAAIxC,EAAc0C,EAAU3C,EAAe4C,yFAvTvC,IAAAE,EAAAvB,KAAAwB,EACoBxB,KAAKxB,MAAnCC,EADU+C,EACV/C,aAAcC,EADJ8C,EACI9C,YAGtBsB,KAAKyB,MAAQ,IAAIC,IAAMC,MAAM,CAC3BC,UAAW,YACXzC,MAAOT,EACPU,OAAQX,IAGVuB,KAAK6B,MAAQ,IAAIH,IAAMI,MAGvB,IAAMC,EAAW,IAAIC,MACrBD,EAASE,OAAS,SAACC,GAEjB,IAAMC,EAAqBD,EAAEE,OAAOC,cAC9BC,EAAoBJ,EAAEE,OAAOG,aAG7BC,EAAYjB,EAAKV,wBAAwByB,EAAmBH,EAAoBzD,EAAaD,GAGnG8C,EAAKJ,eAAeqB,EAAUrD,MAAOqD,EAAUpD,QAC/C,IAAMqD,EAAOD,EAAUrD,MAAQoC,EAAK/C,MAAMQ,MACpC0D,EAAMF,EAAUpD,OAASmC,EAAK/C,MAAMQ,MAE1CuC,EAAKX,SAAS,CACXlB,OAAQhB,EAAc,EAAK+D,EAAO,EAClC9C,OAAQlB,EAAe,EAAIiE,EAAM,IAfb,IAAAC,EAkBIpB,EAAK/C,MAAxBkB,EAlBeiD,EAkBfjD,OAAQC,EAlBOgD,EAkBPhD,OAGViD,EAAgB,IAAIlB,IAAMM,MAAM,CACpC3C,EAAGK,EACHJ,EAAGK,EAGHrB,MAAOyD,EACP5C,MAAOqD,EAAUrD,MACjBC,OAAQoD,EAAUpD,SAMpBmC,EAAKM,MAAMgB,IAAID,GACfrB,EAAKM,MAAMiB,QAEbf,EAASgB,IAAMzE,EAGf0B,KAAKyB,MAAMuB,GAAG,QAAU,SAACd,GAClBA,EAAEE,OAAOa,QAAQ,UAGtB1B,EAAKE,MAAMyB,KAAK,eAAeC,UAC/B5B,EAAKM,MAAMiB,UAGb9C,KAAKyB,MAAMuB,GAAG,YAAa,SAACd,GAC1B1B,QAAQC,IAAIyB,EAAEkB,KAETlB,EAAEE,OAAOa,QAAQ,UAItB1B,EAAKX,SAAS,CACZjC,WAAW,EACXC,sBAAuBsD,EAAEkB,IAAIC,OAC7BxE,sBAAuBqD,EAAEkB,IAAIE,SAK/B/B,EAAKrB,MAAQ,IAAIwB,IAAM6B,MAAM,CAC3BlE,EAAG6C,EAAEkB,IAAIC,OACT/D,EAAG4C,EAAEkB,IAAIE,OACTE,WAAW,EACXC,KAAM,UAGRlC,EAAKrB,MAAM8C,GAAG,WAAY,SAASd,GACjC,IAAMwB,EAAOxB,EAAEE,OAAOuB,YAAY,SAASC,GACzC,MAA+B,SAAxBA,EAAKC,iBACX,GAEGC,EAAYJ,EAAKK,MAAM5E,MACvB6E,EAAaN,EAAKK,MAAM3E,OAExB6E,EAAiB/B,EAAEE,OAAO2B,MAAM1E,EAChC6E,EAAiBhC,EAAEE,OAAO2B,MAAMzE,EAMhC6E,EAAOD,EAAiBF,EAHjBC,EAAiBH,GAMjBpF,IACXwD,EAAEE,OAAO2B,MAAM1E,EAAIX,EAAcoF,GAI/BG,GAAkB,IACpB/B,EAAEE,OAAO2B,MAAM1E,EAAI,GAIjB6E,EAAkB,IACpBhC,EAAEE,OAAO2B,MAAMzE,EAAI,GAIhB6E,GAAQ1F,IACXyD,EAAEE,OAAO2B,MAAMzE,EAAIb,EAAeuF,KAKtCzC,EAAKmC,KAAO,IAAIhC,IAAM0C,KAAK,CACzB/E,EAAG,EACHC,EAAG,EACHH,MAAO,EACPC,OAAQ,EACRiF,KAAM,2BACNC,OAAQ,QACRC,SAAU,SACVC,OAAQ,UACRC,YAAa,EACbhB,KAAM,SAGRlC,EAAKM,MAAMiB,OAEXvB,EAAKX,SAAS,CACZ9B,OAAM,GAAA4F,OAAA5E,OAAA6E,EAAA,EAAA7E,CAAMyB,EAAK/C,MAAMM,QAAjB,CAAyByC,EAAKrB,UAItCqB,EAAK/C,MAAMM,OAAOmB,QAAQ,SAAA2E,GAAI,OAAIA,EAAK5B,GAAG,QAAS,SAACd,GAElD,GADAX,EAAKE,MAAMyB,KAAK,eAAeC,WAC1BjB,EAAEE,OAAO2B,MAAMzF,MAAO,CAEzB,IAAMuG,EAAetD,EAAK/C,MAAMM,OAAOgG,OAAO,SAAAC,GAAS,OAAIA,EAAUC,MAAQ9C,EAAEE,OAAO6C,OAAOD,MAAK,GAE5FE,EAAc,IAAIxD,IAAMyD,YAAY,CACxCvB,KAAMiB,EACNO,eAAgB,CAAC,WAAY,YAAa,cAAe,kBAU3D,OANAP,EAAa7B,GAAG,eAAgB,SAACd,GAC9B1B,QAAQC,IAAIyB,EAAEE,UAGjBb,EAAKM,MAAMgB,IAAIqC,QACf3D,EAAKM,MAAMiB,OAIbvB,EAAKX,SAAS,CACZ9B,OAAQyC,EAAK/C,MAAMM,OAAOgG,OAAO,SAAAC,GAAS,OAAIA,EAAUC,MAAQJ,EAAKI,QAGvEzD,EAAKE,MAAMyB,KAAK,eAAeC,UAC/ByB,EAAKS,SACL9D,EAAKM,MAAMiB,WAGbvB,EAAKrB,MAAM2C,IAAItB,EAAKmC,MACpBnC,EAAKM,MAAMgB,IAAItB,EAAKrB,OACpBqB,EAAKrB,MAAM4C,UAIb9C,KAAKyB,MAAMuB,GAAG,YAAa,SAACd,GAC1BA,EAAEoD,cAAe,EAEjB,IAAIC,EAAS,CAAClG,EAAG6C,EAAEkB,IAAIC,OAAQ/D,EAAG4C,EAAEkB,IAAIE,QACpCkC,EAAW,CAAEnG,EAAGkC,EAAK/C,MAAMI,sBAAuBU,EAAGiC,EAAK/C,MAAMK,uBA8B/D0C,EAAK/C,MAAMG,WAfG,SAAC8G,GAGlBF,EAAS,CAAClG,EAAGoG,EAAMpG,EAAGC,EAAGmG,EAAMnG,GAC/B,IAAIoG,EAjBN,SAAiBC,EAAIC,GACnB,IAAqDC,EAAjDC,EAAMH,EAAGtG,EAAG0G,EAAMJ,EAAGrG,EAAG0G,EAAMJ,EAAGvG,EAAI4G,EAAML,EAAGtG,EASlD,OARIwG,EAAME,IACRH,EAAIvF,KAAK4F,IAAIJ,EAAME,GACRA,GAAXF,EAAME,GAAiBH,GAErBE,EAAME,IACRJ,EAAIvF,KAAK4F,IAAIH,EAAME,GACRA,GAAXF,EAAME,GAAiBJ,GAEjB,CAACM,GAAIL,EAAKM,GAAIL,EAAKM,GAAIL,EAAKM,GAAIL,GAO1BM,CAAQf,EAASD,GAC/BhE,EAAKrB,MAAMb,EAAEqG,EAAQS,IACrB5E,EAAKrB,MAAMZ,EAAEoG,EAAQU,IACrB7E,EAAKmC,KAAKvE,MAAMuG,EAAQW,GAAKX,EAAQS,IACrC5E,EAAKmC,KAAKtE,OAAOsG,EAAQY,GAAKZ,EAAQU,IACtC7E,EAAKmC,KAAK8C,SAAQ,GAElBjF,EAAKM,MAAMiB,OAQb2D,CAAW,CAACpH,EAAG6C,EAAEkB,IAAIC,OAAQ/D,EAAG4C,EAAEkB,IAAIE,WAIxCtD,KAAKyB,MAAMuB,GAAG,UAAW,WAAM,IAErBe,EAAUxC,EAAKmC,KAAfK,OAEJzD,KAAK4F,IAAInC,EAAM3E,QAAU,IAAMkB,KAAK4F,IAAInC,EAAM5E,OAAS,MACzDoC,EAAKX,SAAS,CACZ9B,OAAQyC,EAAK/C,MAAMM,OAAOgG,OAAO,SAAAC,GAAS,OAAIA,EAAUC,MAAQzD,EAAKrB,MAAM8E,QAG7EzD,EAAKrB,MAAMmF,SACX9D,EAAKM,MAAMiB,QAGb,IAAM4D,EAAgB,IAAI1E,MAE1B0E,EAAczE,OAAS,WAErB,IAAM0E,EAAa,IAAIjF,IAAMM,MAAM,CACjC3C,EAAG,GACHC,EAAG,EACHhB,MAAOoI,EACPvH,MAAO,GACPC,OAAQ,KAMVmC,EAAKrB,MAAM2C,IAAI8D,GAEfpF,EAAKM,MAAMiB,QAGb4D,EAAc3D,IAAM,mHAEpBxB,EAAKX,SAAS,CACZjC,WAAW,EACXC,sBAAuB,KACvBC,sBAAuB,SAI3BmB,KAAKyB,MAAMoB,IAAI7C,KAAK6B,wCAoDb,IAEC3C,EAAUc,KAAKxB,MAAfU,MAER,MACI,CACI0H,EAAAC,EAAAC,cAAA,OAAKC,IAAI,IAAIC,GAAG,YAAYC,MAAQ,CAAEC,OAAQ,kBAAmB/H,MAAO,QAASC,OAAQ,QAAS+H,OAAQ,YAC1GP,EAAAC,EAAAC,cAAA,UAAQM,QAAUpH,KAAKT,cAAgBwH,IAAI,KAA3C,aACAH,EAAAC,EAAAC,cAAA,OAAKC,IAAI,IAAIM,UAAU,YAAYJ,MAAQ,CAAEK,SAAU,aACrDV,EAAAC,EAAAC,cAAA,OAAK/D,IAAMzE,EAAQiJ,IAAI,KACrBrI,EAAMsI,IAAI,SAAC5C,EAAM6C,GAAP,OACRb,EAAAC,EAAAC,cAAA,OAAKC,IAAMU,EAAQR,MAAQ,CAAE7H,OAAQwF,EAAKxF,OAAQD,MAAOyF,EAAKzF,MAAOuD,IAAKkC,EAAKtF,EAAGmD,KAAMmC,EAAKvF,EAAGiI,SAAU,WAAYI,WAAY,qCAzVlIC,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b8338e81.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Konva from 'konva';\nimport './App.css';\n\nconst image = 'https://pp.userapi.com/c850436/v850436154/1054bc/Grf6sgUxIco.jpg';\n\nclass App extends Component {\n  state = {\n    canvasHeight: 450,\n    canvasWidth: 700,\n    isDrawing: false,\n    startDrawingPositionX: null,\n    startDrawingPositionY: null,\n    groups: [],\n    ratio: null,\n    scale: null,\n    naturalScale: null,\n    cords: [{width: 0, height: 0, x: 0, y: 0}]\n  };\n\n  stage;\n  layer;\n  rect;\n  group;\n\n  componentDidMount() {\n    const { canvasHeight, canvasWidth } = this.state;\n\n    // создаем Stage - канвас, для рисования\n    this.stage = new Konva.Stage({\n      container: 'container',\n      width: canvasWidth,\n      height: canvasHeight,\n    });\n\n    this.layer = new Konva.Layer();\n\n    // доавбляем изображение для модерации\n    const imageObj = new Image();\n    imageObj.onload = (e) => {\n\n      const imageNaturalHeight = e.target.naturalHeight;\n      const imageNaturalWidth = e.target.naturalWidth;\n\n      // расчитываем необходимый ресайз изображения под канвас\n      const imageSize = this.calculateAspectRatioFit(imageNaturalWidth, imageNaturalHeight, canvasWidth, canvasHeight);\n\n      // расчитываем скейл для позиционирования по центру\n      this.calculateScale(imageSize.width, imageSize.height);\n      const left = imageSize.width * this.state.scale;\n      const top = imageSize.height * this.state.scale;\n\n      this.setState({\n         shiftX: canvasWidth / 2 -  left / 2,\n         shiftY: canvasHeight / 2 - top / 2,\n      });\n\n      const { shiftX, shiftY } = this.state;\n\n      // добавляем изображения\n      const imageToDetect = new Konva.Image({\n        x: shiftX,\n        y: shiftY,\n        // x: 0,\n        // y: 0,\n        image: imageObj,\n        width: imageSize.width,\n        height: imageSize.height,\n      });\n\n      //imageToDetect.rotate(90)\n\n      // обновляем леер\n      this.layer.add(imageToDetect);\n      this.layer.draw();\n    };\n    imageObj.src = image;\n\n    // Удаляем трансофрме со стейджа, по клику в любое место, кроме ректа\n    this.stage.on('click',  (e) => {\n      if ( e.target.hasName('rect')) {\n        return\n      }\n      this.stage.find('Transformer').destroy();\n      this.layer.draw();\n    });\n\n    this.stage.on('mousedown', (e) => {\n      console.log(e.evt);\n\n      if ( e.target.hasName('rect') ) {\n        return\n      }\n\n      this.setState({\n        isDrawing: true,\n        startDrawingPositionX: e.evt.layerX,\n        startDrawingPositionY: e.evt.layerY,\n      });\n\n\n      // создаем группу, в которой хранится рект и иконка удаления\n      this.group = new Konva.Group({\n        x: e.evt.layerX,\n        y: e.evt.layerY,\n        draggable: true,\n        name: 'group',\n      });\n\n      this.group.on('dragmove', function(e) {\n        const rect = e.target.getChildren(function(node) {\n          return node.getClassName() === 'Rect'\n        })[0];\n\n        const rectWidth = rect.attrs.width;\n        const rectHeight = rect.attrs.height;\n\n        const groupPositionX = e.target.attrs.x;\n        const groupPositionY = e.target.attrs.y;\n\n        // для запрета сдвига в право\n        const sumX = groupPositionX + rectWidth;\n\n        // для запрета сдвига вниз\n        const sumY = groupPositionY + rectHeight;\n\n        // запрет выхода за правый край по Х\n        if ( sumX >= canvasWidth) {\n          e.target.attrs.x = canvasWidth - rectWidth;\n        }\n\n        // запрет выхода за левый край по Х\n        if (groupPositionX <= 0) {\n          e.target.attrs.x = 0\n        }\n\n        // запрет выхода наверх по Y\n        if (groupPositionY  < 0) {\n          e.target.attrs.y = 0\n        }\n\n        // запрет выходна вниз по Y\n        if ( sumY >= canvasHeight ) {\n          e.target.attrs.y = canvasHeight - rectHeight;\n        }\n\n      });\n\n      this.rect = new Konva.Rect({\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n        fill: 'rgba(255, 255, 255, 0.7)',\n        stroke: 'black',\n        overflow: 'hidden',\n        cursor: 'pointer',\n        strokeWidth: 2,\n        name: 'rect',\n      });\n\n      this.layer.draw();\n\n      this.setState({\n        groups: [...this.state.groups, this.group]\n      });\n\n      // добавляем событие удаления только по клику на иконку крестика\n      this.state.groups.forEach(item => item.on('click', (e) => {\n        this.stage.find('Transformer').destroy();\n        if (!e.target.attrs.image) {\n\n          const currentGroup = this.state.groups.filter(groupItem => groupItem._id === e.target.parent._id)[0];\n\n          const transformer = new Konva.Transformer({\n            node: currentGroup,\n            enabledAnchors: ['top-left', 'top-right', 'bottom-left', 'bottom-right']\n          });\n\n          /* TODO calc width and height of rect after transform */\n          currentGroup.on('transformend', (e) => {\n             console.log(e.target);\n          });\n\n          this.layer.add(transformer);\n          this.layer.draw();\n          return\n        }\n\n        this.setState({\n          groups: this.state.groups.filter(groupItem => groupItem._id !== item._id)\n        });\n\n        this.stage.find('Transformer').destroy();\n        item.remove();\n        this.layer.draw()\n      }));\n\n      this.group.add(this.rect);\n      this.layer.add(this.group);\n      this.group.draw();\n    });\n\n    // рисуем рект, при этом отменяем всплытие события для того, чтобы при днд не рисовать еще один рект\n    this.stage.on('mousemove', (e) => {\n      e.cancelBubble = true;\n\n      let posNow = {x: e.evt.layerX, y: e.evt.layerY};\n      let posStart = { x: this.state.startDrawingPositionX, y: this.state.startDrawingPositionY };\n\n      function reverse(r1, r2){\n        let r1x = r1.x, r1y = r1.y, r2x = r2.x,  r2y = r2.y, d;\n        if (r1x > r2x ){\n          d = Math.abs(r1x - r2x);\n          r1x = r2x; r2x = r1x + d;\n        }\n        if (r1y > r2y ){\n          d = Math.abs(r1y - r2y);\n          r1y = r2y; r2y = r1y + d;\n        }\n        return ({x1: r1x, y1: r1y, x2: r2x, y2: r2y}); // return the corrected rect.\n      }\n\n      const updateDrag = (posIn) => {\n\n        // update rubber rect position\n        posNow = {x: posIn.x, y: posIn.y};\n        let posRect = reverse(posStart,posNow);\n        this.group.x(posRect.x1);\n        this.group.y(posRect.y1);\n        this.rect.width(posRect.x2 - posRect.x1);\n        this.rect.height(posRect.y2 - posRect.y1);\n        this.rect.visible(true);\n\n        this.layer.draw();\n\n      };\n\n      if (!this.state.isDrawing) {\n        return\n      }\n\n      updateDrag({x: e.evt.layerX, y: e.evt.layerY})\n    });\n\n    // проверяем условия ректа и добавляем иконку удаления\n    this.stage.on('mouseup', () => {\n\n      const { attrs } = this.rect;\n\n      if (Math.abs(attrs.height) < 20 || Math.abs(attrs.width) < 20 ) {\n        this.setState({\n          groups: this.state.groups.filter(groupItem => groupItem._id !== this.group._id)\n        });\n\n        this.group.remove();\n        this.layer.draw()\n      }\n\n      const crossImageObj = new Image();\n\n      crossImageObj.onload = () => {\n\n        const crossImage = new Konva.Image({\n          x: 15,\n          y: 5,\n          image: crossImageObj,\n          width: 50,\n          height: 50,\n        });\n\n        //imageToDetect.rotate(90)\n\n        // add the shape to the layer\n        this.group.add(crossImage);\n        // add the layer to the stage\n        this.layer.draw();\n      };\n\n      crossImageObj.src = 'https://upload.wikimedia.org/wikipedia/ru/4/49/%D0%9F%D0%BE%D0%BA%D0%B5%D0%BC%D0%BE%D0%BD_%D0%98%D0%B2%D0%B8.png'\n\n      this.setState({\n        isDrawing: false,\n        startDrawingPositionX: null,\n        startDrawingPositionY: null,\n      })\n    });\n\n    this.stage.add(this.layer);\n  }\n\n  handleGetData = () => {\n    const { ratio, shiftX, shiftY } = this.state;\n    let groupsCoordinates = [];\n\n    class CoordsWithResizeToOriginalImage {\n      constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n      }\n    }\n\n    this.state.groups.forEach(group => {\n      const { x, y, width, height } = group.getClientRect();\n\n      groupsCoordinates.push( new CoordsWithResizeToOriginalImage(\n          Math.round((x - shiftX) / ratio),\n          Math.round((y - shiftY) / ratio),\n          Math.round(width / ratio),\n          Math.round(height / ratio)\n      ))\n    });\n    console.log(JSON.stringify(groupsCoordinates));\n    this.setState({\n      cords: groupsCoordinates\n    })\n  };\n\n  calculateAspectRatioFit = (srcWidth, srcHeight, maxWidth, maxHeight) => {\n    this.setState({\n      ratio: Math.min(maxWidth / srcWidth, maxHeight / srcHeight)\n    });\n    const { ratio } = this.state;\n\n    return {\n      width: srcWidth * ratio,\n      height: srcHeight * ratio,\n    };\n  };\n\n  calculateScale = (imgWidth, imgHeight) => {\n    const { canvasWidth, canvasHeight } = this.state;\n\n    this.setState({\n      scale: Math.min(canvasWidth / imgWidth, canvasHeight / imgHeight)\n    })\n  };\n\n  render() {\n\n    const { cords } = this.state;\n\n    return (\n        [\n            <div key='1' id='container' style={ { border: '5px solid black', width: '700px', height: '450px', margin: '25px 0' } } />,\n            <button onClick={ this.handleGetData } key='2'>get rects</button>,\n            <div key='3' className='container' style={ { position: 'relative' } }>\n              <img src={ image } alt=\"\"/>\n              { cords.map((item, index) => (\n                  <div key={ index } style={ { height: item.height, width: item.width, top: item.y, left: item.x, position: 'absolute', background: 'rgba(0, 255, 2, 0.7)' } }>\n\n                  </div>\n              )) }\n\n            </div>\n        ]\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}